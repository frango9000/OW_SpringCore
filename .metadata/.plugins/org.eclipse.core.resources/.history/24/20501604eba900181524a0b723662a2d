package com.openwebinars.movieadvisor.service;

import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.openwebinars.movieadvisor.dao.FilmDao;
import com.openwebinars.movieadvisor.model.Film;

@Service
public class FilmService {
	
	@Autowired
	FilmDao filmDao;
	
	public Collection<Film> findByGenre(String... genres) {
		
		final Set<String> generosABuscar = 
				Arrays.stream(genres)
				.distinct()
				.collect(Collectors.toSet());
		
		List<Film> result = null;
		
		result = filmDao.findAll()
			.stream()
			.filter(film -> {
					Set<String> generos= new HashSet<>();
					generos.addAll(film.getGenres());
					return generos.retainAll(generosABuscar);
				})			
			.collect(Collectors.toList());
			
		
		return result;
	}
	
	public List<String> findAllGenres() {
		List<String> result = null;
		
		result = filmDao.findAll()
			.stream()
			.map(f -> f.getGenres())
			.flatMap(lista -> lista.stream())
			.distinct()
			.sorted()
			.collect(Collectors.toList());
		
		return result;
	}
	

}
