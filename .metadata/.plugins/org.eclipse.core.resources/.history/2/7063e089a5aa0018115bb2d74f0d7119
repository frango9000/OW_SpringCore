package com.openwebinars.movieadvisor.dao;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.core.io.UrlResource;

import com.openwebinars.movieadvisor.model.Film;

public class UtilFilmFileReader {

	public static List<Film> readFile(final String path, final String separator, final String listSeparator) {
		List<Film> result = new ArrayList<>();


		try {
			
//			Path p = Paths.get(UtilFilmFileReader.class.getClassLoader().getResource("imdb_data.csv").toURI());
//			System.out.println(p);
			
			URI uri = UtilFilmFileReader.class.getResource("imdb_data.csv").toURI();
			Path p = FileSystems.getDefault().getPath(new UrlResource(uri).toString());
			System.out.println(p);
			// @formatter:off
			result = Files
						//.lines(Paths.get(ResourceUtils.getFile("classpath:imdb_data.csv").toURI()))
						//.lines(Paths.get("/imdb.data.csv"))
						.lines(p)
						.skip(1)
						.map(line -> {
							String[] values = line.split(separator);
							return new Film(Long.parseLong(values[0]), values[1], values[2],
											Arrays.asList(values[3].split(listSeparator)));
					}).collect(Collectors.toList());
 			// @formatter:on


		} catch (Exception e) {
			System.err.println("Error de lectura del fichero de datos: imdb_data");
			System.exit(-1);
		}

		return result;

	}

}
